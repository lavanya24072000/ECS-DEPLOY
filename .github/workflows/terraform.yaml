name: Terraform Infra Pipeline
on:
  push:
    branches: [main]
 
permissions:
  id-token: write
  contents: read
 
jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest
 
    env:
      AWS_REGION: us-east-1  # change as needed
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      SNS_TOPIC_ARN: ${{ secrets.SNS_TOPIC_ARN }}
      TF_LOG: DEBUG
      TF_LOG_PATH: log.txt
    outputs:
      checkout-status: ${{ job.status }}
    steps:
           ######## check out code ###########
      - name: Checkout code
        uses: actions/checkout@v4
        
            ########## aws authenticate ###########
            
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.ROLE }}
          aws-region: us-east-1
          
            ######### setup terraformm and initialize ##########
            
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5
          
      - name: Terraform Init
        run: terraform init
 
      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars"
 
            ############# checkov scan but ignore errors ############
            
      - name: Install Checkov
        run: |
          python -m pip install --upgrade pip
          pip install checkov
          
      - name: Run Checkov Static Analysis
        run: |
          checkov -d . --soft-fail
           
                 #################### doing lint will show syntax errors ##############
      - name: Install tflint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
 
      - name: Run tflint
        run: tflint --init && tflint

                  ############## need approval to  apply command ###########
      - name: Apply if checks pass
        if: ${{ success() }}
        run: terraform apply -auto-approve -var-file="terraform.tfvars"

        
      # - name: Terraform destroy
      #   if: always()
      #   run: terraform destroy -auto-approve

                        ############## publish artifacts ###########
                        
      - name: Upload Terraform logs
        uses: actions/upload-artifact@v4
        with:
          name: terraform-logs
          path: ./log.txt
          
                    ################# sns & slack notification ##############
  send_notification:
    needs: [terraform]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack - Job Status Summary
        uses: act10ns/slack@v2
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: custom
          channel: 'githubnotification'
          message: |
            *Job Status Summary*  
            Pipeline: ${{ github.workflow }}
            Status: ${{ job.status }}
            Completed Jobs:
            - Checkout_publish: ${{ needs.terraform.outputs.checkout-status }}
            - Deploy: ${{ needs.deploy.outputs.deploy-status }}

            
